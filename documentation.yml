openapi: 3.0.2
info:
  title: Photo Caption
  version: '1.0'
servers:
  - url: http://localhost:8080/api
paths:
  /user:
    post:
      summary: creates new user instance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example: # Sample object
                username: username
                password: password
      description: ''
      operationId: 'post_user'
      responses:
        '403':
          description: Unauthorized
        '201':
          description: User Created
          headers:
            Authorization:
              schema:
                description: JWT token that consists user credentials
                type: string

        '500':
          description: Internal server Error
      tags:
        - User
  /token:
    post:
      summary: sends new bearer token with true credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              example: # Sample object
                username: username
                password: password
      description: ''
      operationId: 'post_token'
      responses:
        '404':
          description: Not found
        '401':
          description: Unauthorized
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                description: JWT token that consists user credentials
                type: string

        '500':
          description: Internal server Error
      tags:
        - User

  /images/{id}:
    get:
      summary: get image that corresponds with id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '401':
          description: Unauthorized
      tags:
        - Image
    delete:
      summary: delete the image that corresponds with id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Deleted
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
        '401':
          description: Unauthorized
      tags:
        - Image

  /images:
    post:
      summary: post a new image
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
        '401':
          description: Unauthorized
      tags:
        - Image
  /caption/{imageID}:
    get:
      summary: get all the captions corresponds with the image
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: imageID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
        '404':
          description: Not Found

        '500':
          description: Internal Server Error
        '401':
          description: Unauthorized
      tags:
        - Caption
  /caption:
    post:
      summary: add new caption to any image
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageID:
                  type: integer
                caption:
                  type: string
              example: # Sample object
                imageID: 1
                caption: 'what a spectacular scenery!'
      tags:
        - Caption
  /caption/{id}:
    delete:
      summary: delete caption that corresponds with the id
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: No Content
        '500':
          description: Internal Server Error
        '404':
          description: Not Found
        '401':
          description: Unauthorized
      tags:
        - Caption

tags:
  - name: User
  - name: Image
  - name: Caption

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
